openapi: 3.0.1
info:
  title: Vaccination Service
  version: 1.3.0
  license:
    name: 'Apache License, Version 2.0'
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
paths:
  /api/certify/v1/issue:
    post:
      summary: Issue a vaccination certificate.
      description: Issue a vaccination certificate based on the provided input according to spec 1.0.5 of the digital green certificate https://github.com/ehn-digital-green-development/hcert-spec/blob/main/hcert_spec.md
      requestBody:
        description: Vaccination.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaccinationCertificate'
      parameters:
        - in: query
          required: false
          name: pdf
          schema:
            type: boolean
          examples:
            Generate PDF:
              value: true
            Do not generate PDF:
              value: false
          allowEmptyValue: true
          description: If false, do not return PDF if not required.
        - in: query
          required: false
          name: vcid
          schema:
            type: string
            pattern: [0-9A-Z]+
          examples:
            Alt-Ã–tting:
              value: 84503
            Berlin-Tegel:
              value: 330091
          description: Vaccination center identifier (not required for PVS).
      responses:
        '200':
          description: Returns a JSON document containing the Base45 encoded certificate and optionally a PDF document.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificationResponse'
                example:
                  pdf: base64:...
                  cert

        '400':
          description: Invalid Request
        '401':
          description: Authentication Failure(Credential missing)
        '403':
          description: Forbidden(Invalid Credentials)
        '406':
          description: Incorrect data model
        '500':
          description: Internal Server Error
      security:
        - AppBearerToken: []

components:
  schemas:
    VaccinationCertificate:
      type: object
      required:
        - name
        - dob
        - v
      properties:
        name:
          $ref: 'dgc-schema.json#/$defs/person_name'
        dateOfBirth:
          title: Date of birth
          description: Date of Birth of the person addressed in the DGC. ISO 8601 date format restricted to range 1900-2099
          type: string
          format: date
          pattern: '(19|20)\d{2}-\d{2}-\d{2}'
          example: '1979-04-14'
        v:
          description: Vaccination Group
          type: array
          items:
            $ref: '#/components/schemas/Vaccination'
          minItems: 1
      example:
        name:
          fn: Musterfrau
          gn: Erika
        dob: 1979-04-14
        v:
          tg: 840539006
          vp: 1119305005
          mp: EU/1/20/1528
          ma: ORG-100001699
          dn: 1
          sd: 2
          dt: 2021-04-14
    Vaccination:
      description: Vaccination Entry
      required:
        - tg
        - vp
        - mp
        - ma
        - dn
        - sd
        - dt
      #        - co
      #        - is
      #        - ci
      type: object
      properties:
        tg:
          description: disease or agent targeted
          $ref: 'dgc-schema.json#/$defs/disease-agent-targeted'
        vp:
          description: vaccine or prophylaxis
          $ref: 'dgc-schema.json#/$defs/vaccine-prophylaxis'
        mp:
          description: vaccine medicinal product
          $ref: 'dgc-schema.json#/$defs/vaccine-medicinal-product'
        ma:
          description: 'Marketing Authorization Holder - if no MAH present, then manufacturer'
          $ref: 'dgc-schema.json#/$defs/vaccine-mah-manf'
        dn:
          description: Dose Number
          $ref: 'dgc-schema.json#/$defs/dose_posint'
        sd:
          description: Total Series of Doses
          $ref: 'dgc-schema.json#/$defs/dose_posint'
        dt:
          description: Date of Vaccination
          type: string
          format: date
          #$comment: 'SemanticSG: constrain to specific date range?'

        # Following field have been removed since they're managed on the server side
        #co:
        #  description: Country of Vaccination
        #  $ref: 'dgc-schema.json#/$defs/country_vt'
        #is:
        #  description: Certificate Issuer
        #  $ref: 'dgc-schema.json#/$defs/issuer'
        #ci:
        #  description: 'Unique Certificate Identifier: UVCI'
        #  $ref: 'dgc-schema.json#/$defs/certificate_id'

        ln:
          description: Lot number of the vaccine dose.
          type: string
        pf:
          description: The doctor or personnel performing the vaccination.
          type: string
        nd:
          description: The next vaccination date.
          type: string
          format: date
    CertificationResponse:
      type: object
      properties:
        pdf:
          schema:
            type: string
          description: Base64 encoded PDF document.
          example: base64:...
        cert:
          required: true
          schema:
            type: string
          description: Base45 encoded HCERT according to EU specification.
          example

  securitySchemes:
    AppBearerToken:
      type: http
      description: >-
        Authentication is based on a bearer token
      scheme: bearer
      bearerFormat: JWT
