openapi: 3.0.1
info:
  title: Vaccination Issuer Service API
  description: >-
    The issuer service API generates signed DGC conforming certificates.
  version: 1.3.0
  license:
    name: 'Apache License, Version 2.0'
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
  contact:
    name: UBIRCH GmbH
    url: https://ubirch.com
    email: support@ubirch.com
paths:
  # ===========================================================
  # Available API endpoints
  # ===========================================================
  /api/certify/v2/issue:
    post:
      summary: Issue a vaccination certificate.
      description: >-
        Issue a vaccination certificate based on the provided input according to spec 1.0.0 of the
        [Digital Green Certificate (DGC)](https://github.com/ehn-digital-green-development/ehn-dgc-schema/releases/tag/1.0.0).
      requestBody:
        description: Vaccination information.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaccinationRequest'
      responses:
        '200':
          description: Certificate response as PDF, encoded or binary token.
          content:
            application/cbor+base45:
              schema:
                $ref: '#/components/schemas/CertificationResponse'
            application/cbor:
              schema:
                $ref: '#/components/schemas/CertificationResponseBinary'
            application/pdf:
              schema:
                $ref: '#/components/schemas/CertificationResponsePDF'
        '400':
          description: Invalid Request
          # WIP: define extended error messages if input is wrong
        '401':
          description: Authentication Failure(Credential missing)
        '403':
          description: Forbidden(Invalid Credentials)
        '406':
          description: Incorrect data model
        '500':
          description: Internal Server Error
      security:
        - AppBearerToken: []

components:
  # ===========================================================
  # Request and response schema definitions
  # ===========================================================
  schemas:
    VaccinationRequest:
      description: Vaccination request object.
      type: object
      required:
        - nam
        - dob
        - v
      properties:
        nam:
          title: Person name
          description: Name of the vaccinated person.
          type: object
          required:
            - fn
          properties:
            fn:
              title: Family name
              description: The family or primary name(s) of the person addressed in the certificate
              type: string
              maxLength: 50
              example: "Musterfrau-Dießner"
            gn:
              title: Given name
              description: The given name(s) of the person addressed in the certificate
              type: string
              maxLength: 50
              example: "Erika Dörte"
        dob:
          title: Date of birth
          description: Date of Birth of the person addressed in the DGC. ISO 8601 date format restricted to range 1900-2099
          type: string
          format: date
          pattern: '(19|20)\d{2}-\d{2}-\d{2}'
          example: '1979-04-14'
        v:
          description: Vaccination Group
          type: array
          items:
            $ref: '#/components/schemas/Vaccination'
          minItems: 1
      example:
        nam:
          fn: "Musterfrau-Dießner"
          gn: "Erika Dörte"
        dob: "1979-04-14"
        v:
          -
            id: "IZ28215B"
            tg: "840539006"
            vp: "1119305005"
            mp: "EU/1/20/1528"
            ma: "ORG-100001699"
            dn: 1
            sd: 2
            dt: "2021-04-14"
    Vaccination:
      description: Single vaccination data entry.
      type: object
      required:
        - id
        - tg
        - vp
        - mp
        - ma
        - dn
        - sd
        - dt
      properties:
        id:
          description: >-
            Identifier of the administering location (i.e. vaccination center). It will
            be used in the construction of the DGCI (digitial green certificate identifier).
          type: string
          pattern: "^[0-9A-Z]+$"
        tg:
          $ref: 'dgc-schema.json#/$defs/disease-agent-targeted'
        vp:
          $ref: 'dgc-schema.json#/$defs/vaccine-prophylaxis'
        mp:
          $ref: 'dgc-schema.json#/$defs/vaccine-medicinal-product'
        ma:
          $ref: 'dgc-schema.json#/$defs/vaccine-mah-manf'
        dn:
          $ref: 'dgc-schema.json#/$defs/dose_posint'
        sd:
          $ref: 'dgc-schema.json#/$defs/dose_posint'
        dt:
          description: Date of Vaccination
          type: string
          format: date
    CertificationResponse:
      description: >-
        Base45 encoded and compressed Digital Green Certificate (DGC) according to EU specification.
      type: string
      example
    CertificationResponseBinary:
      description: >-
        Binary representation of the Digital Green Certificate (DGC) according to EU specification.
        This is a pure CBOR Web Token (CWT) without compression and encoding and HC1: prefix.
      type: string
      format: binary
      example: "<CBOR Web Token>"
    CertificationResponsePDF:
      description: >-
        A rendered PDF document containing the vaccination certificate information including a
        Digital Green Certificate (DGC) QR Code according to EU specification.
      type: string
      format: binary
      example: "<PDF>"
  securitySchemes:
    AppBearerToken:
      type: http
      description: >-
        Authentication is based on a bearer token
      scheme: bearer
      bearerFormat: JWT
